{"version":3,"sources":["components/layouts/Navigation.js","components/list/ListItem.js","components/list/List.js","actions/listActions.js","components/pages/Home.js","components/pages/NotFound.js","components/qa/Item.js","actions/qaActions.js","components/pages/About.js","Router.js","App.js","reducers/qaReducer.js","reducers/listReducer.js","reducers/index.js","store.js","index.js"],"names":["Navigation","react_default","a","createElement","className","Link","to","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","ListItem","props","_props$question","question","text","concat","List","this","getList","content","_this$props$list","list","data","loading","error","map","category_item","index","key","category","questions","list_ListItem","Component","connect","state","dispatch","axios","get","then","res","payload","catch","err","Home","list_List","NotFound","Item","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","selected","target","value","onSubmit","bind","assertThisInitialized","getSet","match","params","_this$props$qa","qa","finish","history","length","sendLog","preventDefault","_this2","_this$props$qa2","message","qusestion","anwsers","anwser","name","onChange","htmlFor","undefined","post","console","log","About","Router","Switch","Route","exact","path","component","App","Fragment","layouts_Navigation","src_Router","initialState","combineReducers","arguments","objectSpread","action","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","base","es","HashRouter","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca486c72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img src=\"/questionnaires/images/qa.png\" alt=\"\" />\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarColor02\"\r\n          aria-controls=\"navbarColor02\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                <i className=\"fas fa-home\" /> Home{\" \"}\r\n                <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                <i className=\"fas fa-info-circle\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListItem = props => {\r\n  const { text, id } = props.question;\r\n  return (\r\n    <Link to={`/conversation/${id}`} className=\"btn-q btn-block mt-3\">\r\n      {text}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { Component } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getList } from \"../../actions/listActions\";\r\n\r\nclass List extends Component {\r\n  componentDidMount() {\r\n    this.props.getList();\r\n  }\r\n  render() {\r\n    const { data, loading, error } = this.props.list;\r\n    let content;\r\n    if (loading) {\r\n      content = (\r\n        <div className=\"loading\">\r\n          <i className=\"fa fa-cog fa-spin fa-2x\" />\r\n        </div>\r\n      );\r\n    } else if (error) {\r\n      content = (\r\n        <h2 className=\"text-center\">\r\n          Sorry, There was an error while processing. Please reload\r\n        </h2>\r\n      );\r\n    } else {\r\n      content = data.map((category_item, index) => (\r\n        <div className=\"card my-3\" key={index}>\r\n          <h3 className=\"card-header text-center text-uppercase category-topic\">\r\n            {category_item.category}\r\n          </h3>\r\n          <div className=\"card-body\">\r\n            {category_item.questions.map(question => (\r\n              <ListItem key={question.id} question={question} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ));\r\n    }\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <h1 className=\"text-capitalize text-center mb-4 text-slanted list-topic\">\r\n          to start the questionnaire please select a question from the following\r\n        </h1>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  list: state.list\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getList }\r\n)(List);\r\n","import axios from \"axios\";\r\n\r\n// Get question list from the server\r\nexport const getList = data => dispatch => {\r\n  dispatch({ type: \"LIST_LOADING\" });\r\n  axios\r\n    .get(`https://questionnaires-api.herokuapp.com/qlist`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: \"LIST_DONE\",\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => dispatch({ type: \"LIST_ERROR\" }));\r\n};\r\n","import React from \"react\";\r\n\r\nimport List from \"../list/List\";\r\nconst Home = () => {\r\n  return <List />; // Can add more items later\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"container my-5 text-center .dialogue-box\">\r\n      <h1 className=\"text-center my-3\">Oops !</h1>\r\n      <h2 className=\"text-center my-3\">404 Page Not Found</h2>\r\n      <Link to=\"/\" className=\"btn btn-warning text-uppercase my-3\">\r\n        back home\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getSet, sendLog } from \"../../actions/qaActions\";\r\n\r\nclass Item extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: null\r\n    };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // Get the first question using the id in the url\r\n  componentDidMount() {\r\n    this.props.getSet({ type: \"question\", id: this.props.match.params.id });\r\n  }\r\n\r\n  // Check if there is convesation in the history and if the the conversation is finished,\r\n  // send the history data to the server\r\n  componentDidUpdate() {\r\n    const { finish, history } = this.props.qa;\r\n    if (finish && history.length > 1) {\r\n      this.props.sendLog(history);\r\n    }\r\n  }\r\n\r\n  // Change selected value when the user clicks on radio buttons\r\n  handleChange = e => {\r\n    this.setState({ selected: e.target.value });\r\n  };\r\n\r\n  // Get the next QA set using the the selected anwser\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.selected !== null) {\r\n      this.props.getSet({ type: \"anwser\", id: this.state.selected });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, loading, error, finish } = this.props.qa;\r\n    let content;\r\n    if (loading) {\r\n      content = (\r\n        <div className=\"loading\">\r\n          <i className=\"fa fa-cog fa-spin fa-2x\" />\r\n        </div>\r\n      );\r\n    } else if (error) {\r\n      content = (\r\n        <h2 className=\"text-center\">\r\n          Sorry, There was an error while processing. Please reload\r\n        </h2>\r\n      );\r\n    } else if (finish) { // Display the last response in the conversation\r\n      const { message } = this.props.qa;\r\n      content = <h3 className=\"question-legend\">{message}</h3>;\r\n    } else {\r\n      const { qusestion, anwsers } = data;\r\n      content = (\r\n        <form onSubmit={this.onSubmit}>\r\n          <legend className=\"question-legend\">{qusestion}</legend>\r\n          {anwsers.map(anwser => (\r\n            <div key={anwser.id} className=\"option mb-2\">\r\n              <input\r\n                id={`customRadio1-${anwser.id}`}\r\n                name=\"customRadio\"\r\n                className=\"hide_input\"\r\n                type=\"radio\"\r\n                value={anwser.id}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label\r\n                className=\"form-label\"\r\n                htmlFor={`customRadio1-${anwser.id}`}\r\n              >\r\n                <i className=\"fa fa-check-circle\" />\r\n                &nbsp; {anwser.text}\r\n              </label>\r\n            </div>\r\n          ))}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-confirm btn-block mt-3 text-uppercase\"\r\n          >\r\n            Confirm\r\n          </button>\r\n        </form>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"dialogue-box\">{content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  qa: state.qa\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getSet, sendLog }\r\n)(Item);\r\n","import axios from \"axios\";\r\n\r\n// Get QA set from the server\r\nexport const getSet = data => dispatch => {\r\n  if (data.type === \"anwser\") {\r\n    dispatch({ type: \"LOADING\", payload: data });\r\n  } else {\r\n    dispatch({ type: \"INIT\", payload: data });\r\n  }\r\n  axios\r\n    .get(`https://questionnaires-api.herokuapp.com/set?${data.type}=${data.id}`)\r\n    .then(res => {\r\n      if (res.data.finish === undefined) {\r\n        dispatch({\r\n          type: \"DONE\",\r\n          payload: res.data\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"FINISH\",\r\n          payload: res.data\r\n        });\r\n      }\r\n    })\r\n    .catch(err => dispatch({ type: \"ERROR\" }));\r\n};\r\n\r\n// Send the QA log to the server\r\nexport const sendLog = data => dispatch => {\r\n  axios\r\n    .post(`https://questionnaires-api.herokuapp.com/log`, data)\r\n    .then(res => {\r\n      dispatch({ type: \"LOG_SENT\" });\r\n      console.log(res.data);\r\n    })\r\n    .catch(err => console.log(\"Error occured when sending the log\"));\r\n};\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\".dialogue-box\">\r\n        <h2 className=\"text-center\">\r\n          <strong>About Questionnaire</strong>\r\n        </h2>\r\n        <p className=\"mt-3\">Version : 1.0.0</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./components/pages/Home\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport Item from \"./components/qa/Item\";\r\nimport About from \"./components/pages/About\";\r\n\r\nclass Router extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/conversation/:id\" component={Item} />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default Router;\r\n","import React, { Component } from \"react\";\nimport Navigation from \"./components/layouts/Navigation\";\nimport Router from \"./Router\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navigation />\n        <Router />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\r\n  data: {},\r\n  loading: true,\r\n  error: false,\r\n  finish: false\r\n};\r\n\r\nexport default function(state = { ...initialState, history: [] }, action) {\r\n  switch (action.type) {\r\n    case \"INIT\": // Register first question\r\n      return { ...initialState, history: [action.payload] };\r\n    case \"DONE\": // Recived question and anwser variants data\r\n      return { ...state, data: action.payload, loading: false };\r\n    case \"LOADING\": // Waiting for question and anwsers data\r\n      return { ...initialState, history: [...state.history, action.payload] };\r\n    case \"ERROR\": // Error occured while receiving the question and anwser data\r\n      return { ...state, error: true, loading: false };\r\n    case \"FINISH\": // Received the last response in the conversation\r\n      return {\r\n        ...state,\r\n        finish: true,\r\n        loading: false,\r\n        message: action.payload.message\r\n      };\r\n    case \"LOG_SENT\": // Successfully sent the QA log to the server\r\n      return { ...state, history: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  data: {},\r\n  loading: true,\r\n  error: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"LIST_DONE\": // Received question list successfully\r\n      return { ...state, data: action.payload, loading: false };\r\n    case \"LIST_LOADING\": // Waiting for the response for get question list request\r\n      return { ...initialState };\r\n    case \"LIST_ERROR\": // Error occured while getting the questing list\r\n      return { ...state, error: true, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport qaReducer from \"./qaReducer\";\r\nimport listReducer from \"./listReducer\";\r\n\r\nexport default combineReducers({\r\n  qa: qaReducer,\r\n  list: listReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nconst base = (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(base, document.getElementById(\"root\"));\n"],"sourceRoot":""}